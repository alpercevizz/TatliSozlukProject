@model Entities.Concrete.Author
@{
    ViewBag.Title = "AuthorProfile";
    Layout = "~/Views/Shared/_AuthorLayout.cshtml";
}
<h2>Profilinizi Düzenleyin</h2>
@using (Html.BeginForm("AuthorProfile", "AuthorPanel", FormMethod.Post))
{
    <div class="form-group">
        @*@Html.Label("Yazar ID")*@
        @Html.HiddenFor(x => x.AuthorID, new { @class = "form-control" })

        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.AuthorName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorName)

        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.AuthorSurname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorSurname)
        <br />
        @Html.Label("Yazar Mail Adresi")
        @Html.TextBoxFor(x => x.AuthorMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorMail)
        <br />
        @Html.Label("Yazar Parola")
        @Html.TextBoxFor(x => x.AuthorPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorPassword)
        <br />
        @Html.Label("Yazar Görsel Linki")
        @Html.TextBoxFor(x => x.AuthorImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorImage)
        <br />
        @Html.Label("Yazar Unvan")
        @Html.TextBoxFor(x => x.AuthorTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorTitle)
        <br />
        @Html.Label("Yazar Hakkında")
        @Html.TextBoxFor(x => x.AuthorAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorAbout)
        <br />
        <button class="btn btn-success">Değişiklikleri Kaydet</button>
    </div>
}

